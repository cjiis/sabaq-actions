on:
  repository_dispatch:
    types:
      - deploy-prod-ui
jobs:
  android:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          repository: cjiis/sabaq
          token: ${{ secrets.GH_PAT }}
          ref: ${{ github.event.client_payload.ref }}
      - uses: actions/checkout@v3
        with:
          repository: cjiis/sabaq-action
          token: ${{ secrets.GH_PAT }}
          path: sabaq-action
      - id: get-ui-build-environment
        uses: ./sabaq-action
        with:
          workflow: get-ui-build-environment
      - uses: actions/setup-java@v4
        with:
          distribution: "adopt"
          java-version: "17"
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ steps.get-ui-build-environment.outputs.flutterVersion }}
      - run: sudo gem install bundler -v $BUNDLER_VERSION
        env:
          BUNDLER_VERSION: ${{ steps.get-ui-build-environment.outputs.bundlerVersion }}
      - run: bundle install
        working-directory: android
      - run: |
          echo "$GOOGLE_UPLOAD_KEYSTORE_BASE64" | base64 -d > $GITHUB_WORKSPACE/android/upload-keystore.jks &&
          echo "storePassword=$GOOGLE_UPLOAD_KEYSTORE_PASSWORD" >> $GITHUB_WORKSPACE/android/key.properties &&
          echo "keyPassword=$GOOGLE_UPLOAD_KEYSTORE_PASSWORD" >> $GITHUB_WORKSPACE/android/key.properties &&
          echo "keyAlias=upload" >> $GITHUB_WORKSPACE/android/key.properties &&
          echo "storeFile=$GITHUB_WORKSPACE/android/upload-keystore.jks" >> $GITHUB_WORKSPACE/android/key.properties
        env:
          GOOGLE_UPLOAD_KEYSTORE_PASSWORD: ${{ secrets.GOOGLE_UPLOAD_KEYSTORE_PASSWORD }}
          GOOGLE_UPLOAD_KEYSTORE_BASE64: ${{ secrets.GOOGLE_UPLOAD_KEYSTORE_BASE64 }}
      - run: dart run build_runner build
      - run: flutter build appbundle --flavor prod --dart-define=USE_FIREBASE_EMULATOR=false
      - run: bundle exec fastlane prodDeploy
        working-directory: android
        env:
          GOOGLE_PLAY_API_KEY: ${{ secrets.GOOGLE_PLAY_API_KEY }}
  ios:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
        with:
          repository: cjiis/sabaq
          token: ${{ secrets.GH_PAT }}
          ref: ${{ github.event.client_payload.ref }}
      - uses: actions/checkout@v3
        with:
          repository: cjiis/sabaq-action
          token: ${{ secrets.GH_PAT }}
          path: sabaq-action
      - id: get-ui-build-environment
        uses: ./sabaq-action
        with:
          workflow: get-ui-build-environment
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ steps.get-ui-build-environment.outputs.flutterVersion }}
      - run: gem install bundler -v $BUNDLER_VERSION
        env:
          BUNDLER_VERSION: ${{ steps.get-ui-build-environment.outputs.bundlerVersion }}
      - run: bundle install
        working-directory: ios
      - run: dart run build_runner build
      - run: flutter build ios --flavor prod --no-codesign --dart-define=USE_FIREBASE_EMULATOR=false
      - run: bundle exec fastlane prodBuildDeploy
        working-directory: ios
        env:
          APPLE_API_KEY: ${{ secrets.APPLE_API_KEY }}
          FASTLANE_MATCH_GIT_KEY: ${{ secrets.FASTLANE_MATCH_GIT_KEY }}
          FASTLANE_MATCH_GIT_PASSWORD: ${{ secrets.FASTLANE_MATCH_GIT_PASSWORD }}
          FASTLANE_KEYCHAIN_PASSWORD: ${{ secrets.FASTLANE_KEYCHAIN_PASSWORD }}
  web:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          repository: cjiis/sabaq
          token: ${{ secrets.GH_PAT }}
          ref: ${{ github.event.client_payload.ref }}
      - uses: actions/checkout@v3
        with:
          repository: cjiis/sabaq-action
          token: ${{ secrets.GH_PAT }}
          path: sabaq-action
      - id: get-ui-build-environment
        uses: ./sabaq-action
        with:
          workflow: get-ui-build-environment
      - uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ steps.get-ui-build-environment.outputs.flutterVersion }}
      - uses: actions/setup-node@v4
        with:
          node-version: "18"
          check-latest: true
      - run: npm i -g firebase-tools@13
      - run: dart run build_runner build
      - run: flutter build web --dart-define=USE_FIREBASE_EMULATOR=false
      - run: firebase --token $FIREBASE_TOKEN -P prod deploy
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
